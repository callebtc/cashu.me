name: Docker Build

on:
  pull_request:
    types: [opened, synchronize, reopened]
  release:
    types: [released]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Determine Tag
        id: get_tag
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "::set-output name=tag::${{ github.event.release.tag_name }}"
          else
            echo "::set-output name=tag::${{ github.sha }}"
          fi

      - name: Build and push on release
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name == 'release' && github.event.action == 'released' }}
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${{ steps.get_tag.outputs.tag }}
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
